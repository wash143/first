package program8;

import java.util.ArrayList;
import java.util.Collections;
import java.util.List;
import java.util.Scanner;

// Step 1: Create a class that accepts integer and double values from the user and converts it into a List format
class UpperBoundWildcard {
    private List<Number> numbers;

    public UpperBoundWildcard() {
        numbers = new ArrayList<>();
    }

    public void addNumber(Number number) {
        numbers.add(number);
    }

    public List<Number> getNumbers() {
        return numbers;
    }
}

// Step 2: Create sum and sort methods that accept the generic type list
class MathOperations {
    public static double sum(List<? extends Number> numbers) {
        double sum = 0;
        for (Number number : numbers) {
            sum += number.doubleValue();
        }
        return sum;
    }

    // Use List<Number> here instead of List<? extends Number> for sorting
    public static void sort(List<Number> numbers) {
        Collections.sort(numbers, (a, b) -> Double.compare(a.doubleValue(), b.doubleValue()));
    }
}

// Step 3: Design a menu-driven program to accept and call for the sum and sort of numbers
public class lab8 {
    public static void main(String[] args) {
        UpperBoundWildcard wildcard = new UpperBoundWildcard();
        Scanner scanner = new Scanner(System.in);

        while (true) {
            System.out.println("Menu:");
            System.out.println("1. Add Integer");
            System.out.println("2. Add Double");
            System.out.println("3. Sum");
            System.out.println("4. Sort");
            System.out.println("5. Exit");
            System.out.println("Enter your choice:");
            int choice = scanner.nextInt();

            switch (choice) {
                case 1:
                    System.out.println("Enter an integer:");
                    wildcard.addNumber(scanner.nextInt());
                    break;
                case 2:
                    System.out.println("Enter a double:");
                    wildcard.addNumber(scanner.nextDouble());
                    break;
                case 3:
                    System.out.println("Sum: " + MathOperations.sum(wildcard.getNumbers()));
                    break;
                case 4:
                    MathOperations.sort(wildcard.getNumbers());
                    System.out.println("Sorted numbers: " + wildcard.getNumbers());
                    break;
                case 5:
                    System.exit(0);
                    break;
                default:
                    System.out.println("Invalid choice. Please try again.");
            }
        }
    }
}
