PROGRAM 8.2:
package program8;

import java.util.ArrayList;
import java.util.Collections;
import java.util.List;
import java.util.Scanner;
class UpperBoundWildcards {
    private List<Number> numbers;
    private List<String> strings;

    public UpperBoundWildcards() {
        numbers = new ArrayList<>();
        strings = new ArrayList<>();
    }

    public void addNumber(Number number) {
        numbers.add(number);
    }

    public void addString(String string) {
        strings.add(string);
    }

    public List<Number> getNumbers() {
        return numbers;
    }

    public List<String> getStrings() {
        return strings;
    }
}

class MathOperationss {
    public static double sum(List<? extends Number> numbers) {
        double sum = 0;
        for (Number number : numbers) {
            sum += number.doubleValue();
        }
        return sum;
    }

    public static void sort(List<? extends Number> numbers) {
        Collections.sort(numbers, (a, b) -> Double.compare(a.doubleValue(), b.doubleValue()));
    }

    public static void sortStrings(List<String> strings) {
        Collections.sort(strings);
    }
}

public class lab88 {
    public static void main(String[] args) {
        UpperBoundWildcards wildcard = new UpperBoundWildcards();
        Scanner scanner = new Scanner(System.in);

        while (true) {
            System.out.println("Menu:");
            System.out.println("1. Add Integer");
            System.out.println("2. Add Double");
            System.out.println("3. Add Float");
            System.out.println("4. Add String");
            System.out.println("5. Sum of Numbers");
            System.out.println("6. Sort Numbers");
            System.out.println("7. Sort Strings");
            System.out.println("8. Exit");
            System.out.println("Enter your choice");
            
            int choice;
            try {
                choice = Integer.parseInt(scanner.nextLine());
            } catch (NumberFormatException e) {
                System.out.println("Invalid choice. Please enter a number.");
                continue;
            }

            switch (choice) {
                case 1:
                    System.out.println("Enter an integer:");
                    try {
                        wildcard.addNumber(scanner.nextInt());
                        scanner.nextLine(); // Consume newline
                    } catch (Exception e) {
                        System.out.println("Invalid input. Please enter an integer.");
                        scanner.nextLine(); // Clear invalid input
                    }
                    break;

                case 2:
                    System.out.println("Enter a double:");
                    try {
                        wildcard.addNumber(scanner.nextDouble());
                        scanner.nextLine(); // Consume newline
                    } catch (Exception e) {
                        System.out.println("Invalid input. Please enter a double.");
                        scanner.nextLine(); // Clear invalid input
                    }
                    break;

                case 3:
                    System.out.println("Enter a float:");
                    try {
                        wildcard.addNumber(scanner.nextFloat());
                        scanner.nextLine(); // Consume newline
                    } catch (Exception e) {
                        System.out.println("Invalid input. Please enter a float.");
                        scanner.nextLine(); // Clear invalid input
                    }
                    break;

                case 4:
                    System.out.println("Enter a string:");
                    wildcard.addString(scanner.nextLine());
                    break;

                case 5:
                    System.out.println("Sum: " + MathOperationss.sum(wildcard.getNumbers()));
                    break;

                case 6:
                    MathOperationss.sort(wildcard.getNumbers());
                    System.out.println("Sorted numbers: " + wildcard.getNumbers());
                    break;

                case 7:
                    MathOperationss.sortStrings(wildcard.getStrings());
                    System.out.println("Sorted strings: " + wildcard.getStrings());
                    break;

                case 8:
                    System.out.println("Exiting...");
                    scanner.close();
                    System.exit(0);
                    break;

                default:
                    System.out.println("Invalid choice. Please try again.");
            }
        }
    }
}


